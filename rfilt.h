/*
 * Проект: "Нелинейный фильтр ограничения скорости, ускорения и рывка"
 * Версия: 0.1a
 * Файл: "rfilt.h"
 */

#pragma once
#ifndef RFILT_H
#define RFILT_H
//-----------------------------------------------------------------------------
#include <stdio.h>
//-----------------------------------------------------------------------------
//#define RFILT_DEBUG // дополнительный анализ и вывод отладочных сообщений
//-----------------------------------------------------------------------------
// предельное число итераций в итеративных алгоритмах
#ifndef RFILT_ITER_NUM
#  define RFILT_ITER_NUM 30
#endif
//-----------------------------------------------------------------------------
#ifdef RFILT_DEBUG
#  define RFILT_DBG(fmt, arg...) fprintf(stderr, fmt "\n", ## arg)
#else
#  define RFILT_DBG(fmt, ...) // debug output off
#endif
//-----------------------------------------------------------------------------
// ограничение параметра
#define RFILT_LIMIT(x, min, max) \
  ((x) > (max) ? (max) : ((x) < (min) ? (min) : (x)))
//-----------------------------------------------------------------------------
// ограничение параметра по абсолютной величине
#define RFILT_LIMIT_ABS(x, max) RFILT_LIMIT(x, -max, max)
//-----------------------------------------------------------------------------
// внутренняя структура фильтра
typedef struct rfilt_ {
  // постоянные:
  double V;    // максимальная приведенная скорость
  double Au;   // максимальное приведенное ускорение разгона
  double Ad;   // максимальное приведенное ускорение торможения
  double R;    // максимальный приведенный рывок
  double B;    // коэффициент запаса фильтра [0..0.1)
  double Xmin; // ограничение снизу
  double Xmax; // ограничение сверху

  // переменные состояния:
  double x; // текущее выходное значение
  double v; // текущая приведенная скорость
  double a; // текущее приведенное ускорение

  // переменные статистики
  double s;  // минимальный тормозной путь
  double nt; // время тормозного пути в тактах
} rfilt_t;
//-----------------------------------------------------------------------------
#ifdef __cplusplus
extern "C" {
#endif // __cplusplus
//-----------------------------------------------------------------------------
// инициализация фильтра
void rfilt_init(
  rfilt_t *self,     // указатель на внутреннюю структуру фильтра
  double dt,         // шаг вызова процедуры фильтрации по времени
  double v_max,      // максимальная скорость
  double a_up_max,   // максимальное ускорение разгона
  double a_down_max, // максимальное ускорение торможения
  double r_max,      // максимальный рывок
  double beta,       // коэффициент запаса фильтра [0..0.1)
  double x_init,     // начальное положение
  double x_min,      // ограничение снизу
  double x_max);     // ограничение сверху
//-----------------------------------------------------------------------------
// установка параметров фильтра "на лету"
void rfilt_tune(
  rfilt_t *self,     // указатель на внутреннюю структуру фильтра
  double dt,         // шаг вызова процедуры фильтрации по времени
  double v_max,      // максимальная скорость
  double a_up_max,   // максимальное ускорение разгона
  double a_down_max, // максимальное ускорение разгона
  double r_max,      // максимальный рывок
  double beta,       // коэффициент запаса фильтра [0..0.1)
  double x_min,      // ограничение снизу
  double x_max);     // ограничение сверху
//-----------------------------------------------------------------------------
// выполнить шаг фильтрации
// (функция возвращает "профильтрованное" значение с учетом ограничений)
double rfilt_step(
  rfilt_t *self, // указатель на внутреннюю структуру фильтра
  double y);     // входное значение для фильтра
//-----------------------------------------------------------------------------
#ifdef __cplusplus
}
#endif // __cplusplus
//-----------------------------------------------------------------------------
#endif // RFILT_H

/*** end of "rfilt.h" file ***/
